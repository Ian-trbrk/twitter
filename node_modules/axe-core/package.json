{
  "_args": [
    [
      {
        "raw": "axe-core@^4.0.2",
        "scope": null,
        "escapedName": "axe-core",
        "name": "axe-core",
        "rawSpec": "^4.0.2",
        "spec": ">=4.0.2 <5.0.0",
        "type": "range"
      },
      "D:\\projects\\twitter\\node_modules\\eslint-plugin-jsx-a11y"
    ]
  ],
  "_from": "axe-core@^4.0.2",
  "_hasShrinkwrap": false,
  "_id": "axe-core@4.0.2",
  "_location": "/axe-core",
  "_nodeVersion": "10.22.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/axe-core_4.0.2_1599666501937_0.7606430071413639"
  },
  "_npmUser": {
    "name": "npmdeque",
    "email": "axe@deque.com"
  },
  "_npmVersion": "6.14.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "axe-core@^4.0.2",
    "scope": null,
    "escapedName": "axe-core",
    "name": "axe-core",
    "rawSpec": "^4.0.2",
    "spec": ">=4.0.2 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint-plugin-jsx-a11y"
  ],
  "_resolved": "https://registry.npmjs.org/axe-core/-/axe-core-4.0.2.tgz",
  "_shasum": "c7cf7378378a51fcd272d3c09668002a4990b1cb",
  "_shrinkwrap": null,
  "_spec": "axe-core@^4.0.2",
  "_where": "D:\\projects\\twitter\\node_modules\\eslint-plugin-jsx-a11y",
  "bugs": {
    "url": "https://github.com/dequelabs/axe-core/issues"
  },
  "contributors": [
    {
      "name": "David Sturley",
      "url": "http://deque.com/"
    },
    {
      "name": "Dylan Barrell",
      "email": "dylan@barrell.com",
      "url": "http://deque.com/"
    },
    {
      "name": "Wilco Fiers",
      "url": "http://deque.com/"
    },
    {
      "name": "Dian Fay",
      "url": "http://deque.com/"
    },
    {
      "name": "Marcy Sutton",
      "url": "http://deque.com/"
    }
  ],
  "dependencies": {},
  "description": "Accessibility engine for automated Web UI testing",
  "devDependencies": {
    "@babel/core": "^7.5.4",
    "@babel/plugin-proposal-object-rest-spread": "^7.5.4",
    "@babel/polyfill": "^7.4.4",
    "@babel/preset-env": "^7.5.4",
    "@deque/dot": "^1.1.5",
    "aria-query": "^3.0.0",
    "axios": "^0.19.0",
    "babelify": "^10.0.0",
    "blanket": "~1.2.3",
    "browserify": "^16.2.3",
    "chai": "~4.2.0",
    "clone": "~2.1.1",
    "core-js": "^3.2.1",
    "core-js-pure": "^3.6.5",
    "css-selector-parser": "^1.3.0",
    "derequire": "^2.1.1",
    "emoji-regex": "8.0.0",
    "es6-promise": "^4.2.6",
    "eslint": "^6.1.0",
    "eslint-config-prettier": "^6.2.0",
    "execa": "^2.0.2",
    "fs-extra": "^8.0.1",
    "globby": "^10.0.0",
    "grunt": "^1.0.3",
    "grunt-babel": "^8.0.0",
    "grunt-contrib-clean": "^2.0.0",
    "grunt-contrib-concat": "^1.0.1",
    "grunt-contrib-connect": "^2.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^4.0.0",
    "grunt-contrib-watch": "^1.1.0",
    "grunt-parallel": "^0.5.1",
    "grunt-run": "^0.8.1",
    "grunt-webpack": "^3.1.3",
    "html-entities": "^1.2.0",
    "husky": "^3.0.0",
    "jquery": "^3.0.0",
    "jsdoc": "^3.5.5",
    "jsdom": "^16.3.0",
    "lint-staged": "^9.2.1",
    "make-dir": "^3.0.0",
    "markdown-table": "^1.1.2",
    "memoizee": "^0.4.14",
    "minami": "^1.2.3",
    "mkdirp": "^0.5.1",
    "mocha": "^6.1.2",
    "mocha-headless-chrome": "^2.0.3",
    "node-notifier": "^7.0.1",
    "prettier": "^1.17.1",
    "puppeteer": "^2.0.0",
    "revalidator": "~0.3.1",
    "selenium-webdriver": "~3.6.0",
    "sinon": "^7.5.0",
    "sri-toolbox": "^0.2.0",
    "standard-version": "^8.0.0",
    "typescript": "^3.5.3",
    "uglify-js": "^3.4.4",
    "weakmap-polyfill": "^2.0.0",
    "webpack": "^4.42.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-arU1h31OGFu+LPrOLGZ7nB45v940NMDMEJeNmbutu57P+UFDVnkZg3e+J1I2HJRZ9hT7gO8J91dn/PMrAiKakA==",
    "shasum": "c7cf7378378a51fcd272d3c09668002a4990b1cb",
    "tarball": "https://registry.npmjs.org/axe-core/-/axe-core-4.0.2.tgz",
    "fileCount": 631,
    "unpackedSize": 3332979,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfWPlGCRA9TVsSAnZWagAAY1wQAJvbybT9cIpBnYMbveos\nvvwjWtMsSbTb6DRO+/PVBLz7UBh7PrrHalzq5xI0nh9PsuaFBiQr3DnaE93T\n/so02anXriFYqPybggDzKC1KqejZBl+WKFcimw+GJ47RfnPpPecOKIF4XwR4\nSeiZ6qQ3Y+8VV0EHlr1uKkdTfYjsyfsnAXAn1T6uMfBvP1jFkY/CoxTsvbG1\nWcYaOSV4S7A4FOu6OXc1XGsggYmnArNpQvtAQOmRr7P604htMJNFcliMl5mR\nZwe7xjeDyfebOASXR5zh9njjvP65fjCxC1tOyeqVMFsPH8ZLQbhU0ph9Ad7G\nuY2oN08NFK7nFQWDYj6qeZUj092Cle+lKvTfyxI0KfT2a2scz/sgYsq962py\nYPRbs33y0JxLwsugs8gNMmii77m5BcVlf1aAUrAmFAy4zp/IBmNLHC852/ca\njYWo04Xe2K2v1kpn3YL9cq7VJRriYvQ5nvZJaOKelYs6fttvRa4VeO8GarM7\nJhWo5cvUfOpMbnr4HLMY76E/jI98AM5TUS36T70Nse9lam77dd6fN1InL/yu\nj1pcC8MhKbT8qC07VnNpl/qyRAwbgOhsOxQMyLc9MDB6YQmuAxvc+Nz4Cb9l\n9tKvMNIEVrQ3TzOq5PxNOpwhgYPx5uf0ZIlCnjnmIbDm/c3AMci6qETkFlvR\nDmo/\r\n=kwhR\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "gitHead": "50b5d0ad9298f9919de761bf325474c8acb81994",
  "homepage": "https://www.deque.com/axe/",
  "keywords": [
    "Accessibility",
    "a11y",
    "testing",
    "unit",
    "tdd",
    "bdd",
    "axe"
  ],
  "license": "MPL-2.0",
  "lint-staged": {
    "*.{md,json,ts,html}": [
      "prettier --write",
      "git add"
    ],
    "*.js": [
      "eslint --fix",
      "prettier --write",
      "git add"
    ]
  },
  "main": "axe.js",
  "maintainers": [
    {
      "name": "dylanb",
      "email": "dylan@barrell.com"
    },
    {
      "name": "wilcofiers",
      "email": "wilcofiers@gmail.com"
    },
    {
      "name": "dqlabs",
      "email": "labs@deque.com"
    },
    {
      "name": "npmdeque",
      "email": "axe@deque.com"
    }
  ],
  "name": "axe-core",
  "optionalDependencies": {},
  "readme": "# axe-core\n\n[![CircleCI](https://circleci.com/gh/dequelabs/axe-core.svg?style=svg)](https://circleci.com/gh/dequelabs/axe-core)\n\n[![License](https://img.shields.io/npm/l/axe-core.svg)](LICENSE)\n[![Version](https://img.shields.io/npm/v/axe-core.svg)](https://www.npmjs.com/package/axe-core)\n[![Total npm downloads](https://img.shields.io/npm/dt/axe-core.svg)](https://www.npmjs.com/package/axe-core)\n[![Commits](https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg)](https://github.com/dequelabs/axe-core/commits/develop)\n[![GitHub contributors](https://img.shields.io/github/contributors/dequelabs/axe-core.svg)](https://github.com/dequelabs/axe-core/graphs/contributors)\n[![Join the chat at https://gitter.im/dequelabs/axe-core](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/dequelabs/axe-core?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Package Quality](http://npm.packagequality.com/shield/axe-core.svg)](http://packagequality.com/#?package=axe-core)\n\nAxe is an accessibility testing engine for websites and other HTML-based user interfaces. It's fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.\n\n[Sign up for axe news](https://hubs.ly/H0fsN0b0) to get the latest on axe features, future releases, and events.\n\n## Philosophy\n\nThe web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.\n\nAutomated accessibility testing is a huge timesaver, it doesn't require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don't give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.\n\nAxe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.\n\n## About axe - our Manifesto\n\n- Axe is open source.\n- It returns zero false positives (bugs notwithstanding).\n- It's designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.\n- It's actively supported by [Deque Systems](https://www.deque.com), a major accessibility vendor.\n- It integrates with your existing functional/acceptance automated tests.\n- It automatically determines which rules to run based on the evaluation context.\n- Axe supports in-memory fixtures, static fixtures, integration tests and iframes of infinite depth.\n- Axe is highly configurable.\n\n## Getting started\n\nFirst download the package:\n\n```console\nnpm install axe-core --save-dev\n```\n\nNow include the javascript file in each of your iframes in your fixtures or test systems:\n\n```html\n<script src=\"node_modules/axe-core/axe.min.js\"></script>\n```\n\nNow insert calls at each point in your tests where a new piece of UI becomes visible or exposed:\n\n```js\naxe\n\t.run()\n\t.then(results => {\n\t\tif (results.violations.length) {\n\t\t\tthrow new Error('Accessibility issues found');\n\t\t}\n\t})\n\t.catch(err => {\n\t\tconsole.error('Something bad happened:', err.message);\n\t});\n```\n\n## Supported Browsers\n\nThe [axe-core API](doc/API.md) fully supports the following browsers:\n\n- Microsoft Edge v40 and above\n- Google Chrome v42 and above\n- Mozilla Firefox v38 and above\n- Apple Safari v7 and above\n- Internet Explorer v9, 10, 11\n\nSupport means that we will fix bugs and attempt to test each browser regularly. Only Firefox, Chrome, and Internet Explorer 11 are currently tested on every pull request.\n\nThere is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the `color-contrast` rule is known not to work with JSDOM.\n\nWe can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.\n\n## The Accessibility Rules\n\nThe complete list of rules run by axe-core can be found in [doc/rule-descriptions.md](./doc/rule-descriptions.md).\n\n## Contents of the API Package\n\nThe [axe-core API](doc/API.md) package consists of:\n\n- `axe.js` - the JavaScript file that should be included in your web site under test (API)\n- `axe.min.js` - a minified version of the above file\n\n## Localization\n\nAxe can be built using your local language. To do so, a localization file must be added to the `./locales` directory. This file must have be named in the following manner: `<langcode>.json`. To build axe using this locale, instead of the default, run axe with the `--lang` flag, like so:\n\n`grunt build --lang=nl`\n\nThis will create a new build for axe, called `axe.<lang>.js` and `axe.<lang>.min.js`. If you want to build localized versions, simply pass in `--all-lang` instead.\n\nTo create a new translation for axe, start by running `grunt translate --lang=<langcode>`. This will create a json file fin the `./locales` directory, with the default English text in it for you to translate. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see [Check Message Template](/docs/check-message-template.md).\n\nTo update existing translation file, re-run `grunt translate --lang=<langcode>`. This will add new messages used in English and remove messages which were not used in English.\n\nAdditionally, locale can be applied at runtime by passing a `locale` object to `axe.configure()`. The locale object must be of the same shape as existing locales in the `./locales` directory. For example:\n\n```js\naxe.configure({\n\tlocale: {\n\t\tlang: 'de',\n\t\trules: {\n\t\t\taccesskeys: {\n\t\t\t\thelp: 'Der Wert des accesskey-Attributes muss einzigartig sein.'\n\t\t\t}\n\t\t\t// ...\n\t\t},\n\t\tchecks: {\n\t\t\tabstractrole: {\n\t\t\t\tfail: 'Abstrakte ARIA-Rollen dürfen nicht direkt verwendet werden.'\n\t\t\t},\n\t\t\t'aria-errormessage': {\n\t\t\t\t// Note: doT (https://github.com/olado/dot) templates are supported here.\n\t\t\t\tfail:\n\t\t\t\t\t'Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzukündigen (z. B., aria-live, aria-describedby, role=alert, etc.).'\n\t\t\t}\n\t\t\t// ...\n\t\t}\n\t}\n});\n```\n\n## Supported ARIA Roles and Attributes.\n\nRefer [axe-core ARIA support](./doc/aria-supported.md) for a complete list of ARIA supported roles and attributes by axe.\n\n## Contributing\n\nRead the [Proposing Axe-core Rules guide](./doc/rule-proposal.md)\n\nRead the [documentation on the architecture](./doc/developer-guide.md)\n\nRead the [documentation on contributing](CONTRIBUTING.md)\n\n## Projects using axe-core\n\n[List of projects using axe-core](doc/projects.md)\n\n## Acknowledgements\n\nThanks to Dulin Marat for his [css-selector-parser](https://www.npmjs.com/package/css-selector-parser) implementation which is included for shadow DOM support.\n\nThanks to the [Slick Parser](https://github.com/mootools/slick/blob/master/Source/Slick.Parser.js) implementers for their contribution, we have used some of their algorithms in our shadow DOM support code.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dequelabs/axe-core.git"
  },
  "scripts": {
    "api-docs": "jsdoc --configure .jsdoc.json",
    "build": "grunt",
    "develop": "grunt dev --force",
    "eslint": "eslint --color --format stylish '{lib,test,build,doc}/**/*.js' 'Gruntfile.js'",
    "fmt": "prettier --write *.{json,md,js} **/*.ts './{.github,build,doc,lib,test}/**/*.{json,md,js,ts,html}'",
    "imports-gen": "node ./build/imports-generator",
    "next-release": "standard-version --scripts.prebump=./build/next-version.js --skip.commit=true --skip.tag=true",
    "prepublishOnly": "grunt build && grunt file-exists",
    "release": "standard-version -a",
    "rule-gen": "node build/rule-generator",
    "sri-update": "grunt build && node build/sri-update && git add sri-history.json",
    "sri-validate": "node build/sri-update --validate",
    "start": "npm run develop",
    "test": "tsc && grunt test",
    "test:examples": "node ./doc/examples/test-examples",
    "test:headless": "node ./build/test/headless",
    "test:locales": "mocha test/test-locales.js",
    "test:node": "mocha test/node/*.js",
    "test:rule-help-version": "mocha test/test-rule-help-version.js",
    "version": "echo \"use 'npm run release' to bump axe-core version\" && exit 1"
  },
  "standard-version": {
    "scripts": {
      "postbump": "npm ci && npm run sri-update"
    }
  },
  "typings": "axe.d.ts",
  "version": "4.0.2"
}
